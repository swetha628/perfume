{"ast":null,"code":"var _jsxFileName = \"/home/abservetech/absera_academy_projects/perfume/perfume-shop/frontend/src/components/cart.js\";\n// src/components/Cart.js\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51QUQ53Ep67J1jInyHXkyb9VliPuDAR5xGuB3S0WO5cXRI0SpV0hy4MM1Sg615l7trkUniec2oll2Xf8yJVnHy5CY00NHy45FNs'); // Replace with your Stripe public key\n\nfunction Cart({\n  cart\n}) {\n  // Function to handle checkout\n  const handleCheckout = async () => {\n    try {\n      // Make sure cart is not empty\n      if (cart.length === 0) {\n        alert('Your cart is empty');\n        return;\n      }\n\n      // Prepare cart items with quantity and image (assuming you store them)\n      const cartItems = cart.map(item => ({\n        name: item.name,\n        price: item.price * 100,\n        // Stripe expects the price in cents\n        quantity: item.quantity || 1,\n        // Default quantity to 1 if not provided\n        image: item.image || 'default-image-url' // Add a default image URL if none exists\n      }));\n\n      // Make an API call to your backend to create a checkout session\n      const response = await fetch('http://localhost:5000/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          products: cartItems // Send the cart items to the backend\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create checkout session');\n      }\n      const session = await response.json();\n\n      // Redirect to Stripe Checkout\n      const stripe = await stripePromise;\n      const {\n        error\n      } = await stripe.redirectToCheckout({\n        sessionId: session.id // Make sure the backend sends session.id\n      });\n      if (error) {\n        console.error('Error redirecting to checkout:', error);\n        alert('Error during checkout. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error in handleCheckout:', error);\n      alert('Error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [item.name, \" - $\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", item.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: item.name,\n        style: {\n          width: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCheckout,\n      children: \"Proceed to Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","loadStripe","jsxDEV","_jsxDEV","stripePromise","Cart","cart","handleCheckout","length","alert","cartItems","map","item","name","price","quantity","image","response","fetch","method","headers","body","JSON","stringify","products","ok","Error","session","json","stripe","error","redirectToCheckout","sessionId","id","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","onClick","_c","$RefreshReg$"],"sources":["/home/abservetech/absera_academy_projects/perfume/perfume-shop/frontend/src/components/cart.js"],"sourcesContent":["// src/components/Cart.js\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe('pk_test_51QUQ53Ep67J1jInyHXkyb9VliPuDAR5xGuB3S0WO5cXRI0SpV0hy4MM1Sg615l7trkUniec2oll2Xf8yJVnHy5CY00NHy45FNs'); // Replace with your Stripe public key\n\nfunction Cart({ cart }) {\n  // Function to handle checkout\n  const handleCheckout = async () => {\n    try {\n      // Make sure cart is not empty\n      if (cart.length === 0) {\n        alert('Your cart is empty');\n        return;\n      }\n\n      // Prepare cart items with quantity and image (assuming you store them)\n      const cartItems = cart.map(item => ({\n        name: item.name,\n        price: item.price * 100, // Stripe expects the price in cents\n        quantity: item.quantity || 1, // Default quantity to 1 if not provided\n        image: item.image || 'default-image-url', // Add a default image URL if none exists\n      }));\n\n      // Make an API call to your backend to create a checkout session\n      const response = await fetch('http://localhost:5000/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          products: cartItems, // Send the cart items to the backend\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create checkout session');\n      }\n\n      const session = await response.json();\n\n      // Redirect to Stripe Checkout\n      const stripe = await stripePromise;\n      const { error } = await stripe.redirectToCheckout({\n        sessionId: session.id, // Make sure the backend sends session.id\n      });\n\n      if (error) {\n        console.error('Error redirecting to checkout:', error);\n        alert('Error during checkout. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error in handleCheckout:', error);\n      alert('Error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Your Cart</h2>\n      {/* Display cart items */}\n      {cart.length === 0 ? (\n        <p>Your cart is empty</p>\n      ) : (\n        cart.map(item => (\n          <div key={item.id}>\n            <p>{item.name} - ${item.price}</p>\n            <p>Quantity: {item.quantity}</p>\n            <img src={item.image} alt={item.name} style={{ width: '50px' }} />\n          </div>\n        ))\n      )}\n\n      <button onClick={handleCheckout}>Proceed to Checkout</button>\n    </div>\n  );\n}\n\nexport default Cart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}